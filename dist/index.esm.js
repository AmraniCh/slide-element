let e=(e,r)=>{let t=["transitionend","transitioncancel"],n=()=>e.clientHeight,o=()=>e.style,i=e=>o().display=e,s=(e=!1)=>{let t=Object.assign({height:"",overflow:"hidden",transitionDuration:".25s",transitionTimingFunction:"ease"},r);Object.entries(t).forEach(([r,t])=>{o()[r]=e?"":t})},c=r=>new Promise(i=>{s();let c=[n()+"px","0px"];r&&c.reverse();let[u,l]=c;new Promise(r=>{t.forEach(n=>{e["on"+n]=()=>{t.forEach(r=>e["on"+r]=null),r()}})}).then(()=>{s(!0),i()}),o().height=u,requestAnimationFrame(()=>{requestAnimationFrame(()=>{o().height=l})})}),u=function(){try{return Promise.resolve(c(!1)).then(function(){return i("none"),Promise.resolve(!1)})}catch(e){return Promise.reject(e)}},l=function(){try{return i("block"),Promise.resolve(c(!0)).then(function(){return Promise.resolve(!0)})}catch(e){return Promise.reject(e)}};return{up:u,down:l,toggle:()=>n()?u():l()}},r=function(r,t={}){try{return Promise.resolve(e(r,t).down())}catch(e){return Promise.reject(e)}},t=function(r,t={}){try{return Promise.resolve(e(r,t).up())}catch(e){return Promise.reject(e)}},n=(r,t={})=>e(r,t).toggle();export{r as down,n as toggle,t as up};
