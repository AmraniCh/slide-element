const e=["transitionend","transitioncancel"];let t,n;const s=(e=!0)=>{const s=Object.assign({height:"",overflow:"hidden",transitionDuration:".25s",transitionTimingFunction:"ease"},n);e?Object.assign(t.style,s):Object.keys(s).forEach(e=>t.style[e]="")},i=n=>new Promise(i=>{s();const a=["0px",window.getComputedStyle(t).height];"up"===n&&a.reverse();const[o,r]=a;new Promise(n=>{var s;s=function s(){var i;i=s,e.forEach(e=>{t.removeEventListener(e,i)}),n()},e.forEach(e=>{t.addEventListener(e,s)})}).then(()=>{s(!1),i()}),t.style.height=o,requestAnimationFrame(()=>{requestAnimationFrame(()=>{t.style.height=r})})}),a=async(e,s={})=>(t=e,n=s,e.dataset.isSlidOpen="1",e.style.display="block",await i("down"),Promise.resolve(!0)),o=async(e,s={})=>(t=e,n=s,await i("up"),delete e.dataset.isSlidOpen,e.style.display="none",Promise.resolve(!1)),r=(e,s={})=>(t=e,n=s,e.dataset.isSlidOpen?o(e,s):a(e,s));export{a as down,r as toggle,o as up};
