let e=(e,t)=>{let n=["transitionend","transitioncancel"],i=()=>e.clientHeight,a=()=>e.style,o=e=>a().display=e,s=(e=!1)=>{let n=Object.assign({height:"",overflow:"hidden",transitionDuration:".25s",transitionTimingFunction:"ease"},t);Object.entries(n).forEach(([t,n])=>{a()[t]=e?"":n})},r=t=>new Promise(o=>{s();let r=[i()+"px","0px"];t&&r.reverse();let[c,l]=r;new Promise(t=>{n.forEach((i,a)=>{e.addEventListener(i,()=>{e.dispatchEvent(new TransitionEvent(n[1^a])),t()},{once:!0})})}).then(()=>{s(!0),o()}),a().height=c,requestAnimationFrame(()=>{requestAnimationFrame(()=>{a().height=l})})}),c=async()=>(await r(!1),o("none"),Promise.resolve(!1)),l=async()=>(o("block"),await r(!0),Promise.resolve(!0));return{up:c,down:l,toggle:()=>i()?c():l()}},t=async(t,n={})=>await e(t,n).down(),n=async(t,n={})=>await e(t,n).up(),i=(t,n={})=>e(t,n).toggle();export{t as down,i as toggle,n as up};
